/*  * Copyright (C) 2015 José Francisco & Nuno Carvalho * * This program is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 3 of the License, or * (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program.  If not, see <http://www.gnu.org/licenses/>. */package Server;import Game.ParsingException;import Game.User;import Net.ExcessBytesException;import Net.PacketTooSmallException;import Server.GameNetwork.ServerPool;import java.io.IOException;import java.net.Socket;import java.net.SocketException;import java.util.Scanner;import java.util.concurrent.ConcurrentHashMap;import java.util.concurrent.Executor;import java.util.concurrent.Executors;import java.util.concurrent.ScheduledThreadPoolExecutor;/** * * @author José */public class Main {    public static void main(String args[]) throws SocketException, IOException, InterruptedException, ExcessBytesException, PacketTooSmallException, ParsingException {        EasyLogger logger = new EasyLogger((System.out));        System.out.println("Servidor master?");        Scanner scan = new Scanner(System.in);        ServerPool gameServers;        ConcurrentHashMap<String, User> users = new ConcurrentHashMap<>();        if (scan.nextLine().equals("SIM")) {            gameServers = new ServerPool(logger, users);        } else {            System.out.println("Endereço Servidor Master?");            gameServers = new ServerPool(logger, new Socket(scan.nextLine(), 4321), users);        }        GameServer server = new GameServer(logger, gameServers, users);        Executor ex = new ScheduledThreadPoolExecutor(2);        ex.execute(server);        ex.execute(gameServers);    }}