/*  * Copyright (C) 2015 José Sousa & Nuno Carvalho * * This program is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 3 of the License, or * (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program.  If not, see <http://www.gnu.org/licenses/>. */package Game;import java.io.BufferedReader;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.Collections;/** * * @author josesousa9000@gmail.com */public class Perguntas {    private final ArrayList<Pergunta> perguntas;    public Perguntas(String filename) throws FileNotFoundException, ParsingException, IOException {        BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(filename), "Cp1252"));        //ler todas as linhas do desafio        String line, tokens[];        this.perguntas = new ArrayList<>();        while ((line = in.readLine()) != null) {            tokens = line.split(",(?=([^\"]*\"[^\"]*\")*[^\"]*$)");            if (tokens.length != 7) {                throw new ParsingException("linha com argumentos insuficientes!");            }            try {                this.perguntas.add(new Pergunta(tokens[0], tokens[1], tokens[2].replaceAll("^\"|\"$", ""), tokens[3].replaceAll("^\"|\"$", ""), tokens[4].replaceAll("^\"|\"$", ""), tokens[5].replaceAll("^\"|\"$", ""), Integer.parseInt(tokens[6])));            } catch (NumberFormatException ex) {                throw new ParsingException("número de pergunta certa inválido");            }        }        in.close();        Collections.shuffle(perguntas);    }    public Pergunta getPergunta(int i) {        return this.perguntas.get(i);    }}